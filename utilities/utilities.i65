; 6502 Useful Code and Hints
;   Examples use the ca65 assembler.

; A macro to increment a 16 bit variable in memory.
; Parameters:
;   var - the name of a zero page or absolute addressed 16 bit variable.
; Notes: Clobbers the Z and N flags.
.macro  inc_16 var
        .local no_wrap
        inc var
        bne no_wrap
      	inc var+1
no_wrap:
.endmacro

; A macro to decrement a 16 bit variable in memory.
; Parameters:
;   var - the name of a zero page or absolute addressed 16 bit variable.
; Notes: Clobbers the A register, Z and N flags.
.macro  dec_16 var
        .local no_wrap
        lda var
        bne no_wrap
      	dec var+1
no_wrap:
        dec var
.endmacro

; A macro to adjust a 16 bit variable in memory by a literal amount.
; Parameters:
;   var - the name of a zero page or absolute addressed 16 bit variable.
;   step - an integer constant to be added to var.
; Notes: Clobbers the A register, C, V, Z and N flags.
.macro  adj_16 var,step
        .local no_carry
        clc
        lda var
        adc #.lowbyte(step)
        sta var
.if .highbyte(step)
        lda var+1
        adc #.highbyte(step)
        sta var+1
.else
        bcc no_carry
        inc var+1
no_carry:
.endif
.endmacro


; A macro to increment a 16 bit var pointed to by a zp pointer
; Parameters:
;   zpp - a pointer in the zero page that points to a 16 bit variable.
; Notes: Clobbers the Y register, Z and N flags.
.macro  inc_zpi_16 zpp
        .local no_wrap
        inc (zpp)
        bne no_wrap
        ldy #1
        inc (zpp),y
no_wrap:
.endmacro

; A macro to decrement a 16 bit var pointed to by a zp pointer
; Parameters:
;   zpp - a pointer in the zero page that points to a 16 bit variable.
; Notes: Clobbers the A and Y registers, Z and N flags.
.macro  dec_zpi_16 zpp
        .local no_wrap
        lda (zpp)
        bne no_wrap
        ldy #1
        dec (zpp),y
no_wrap:
        dec (zpp)
.endmacro

