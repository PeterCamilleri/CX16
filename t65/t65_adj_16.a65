; Test the adj_16 macro.

.include "test65.i65"
.include "../asminc/set_16.i65"
.include "../asminc/adj_16.i65"

.export _main
.pc02

.zeropage
zpv: .res 2
ptr: .res 2

.data
abv: .res 12

.code
_main:

  ; Adjust a zero page variable.
  set_16 zpv,$1234

  adj_16 zpv, $0000
  lda zpv
  cmp #$34
  fail_ne 10
  lda zpv+1
  cmp #$12
  fail_ne 11

  adj_16 zpv, $0001
  lda zpv
  cmp #$35
  fail_ne 12
  lda zpv+1
  cmp #$12
  fail_ne 13

  adj_16 zpv, $0100
  lda zpv
  cmp #$35
  fail_ne 14
  lda zpv+1
  cmp #$13
  fail_ne 15

  adj_16 zpv, $0101
  lda zpv
  cmp #$36
  fail_ne 16
  lda zpv+1
  cmp #$14
  fail_ne 17

  adj_16 zpv, exit
  lda zpv
  cmp #$2F
  fail_ne 18
  lda zpv+1
  cmp #$14
  fail_ne 19


  ; Adjust an absolute variable.
  set_16 abv,$1234

  adj_16 abv, $0000
  lda abv
  cmp #$34
  fail_ne 20
  lda abv+1
  cmp #$12
  fail_ne 21

  adj_16 abv, $0001
  lda abv
  cmp #$35
  fail_ne 22
  lda abv+1
  cmp #$12
  fail_ne 23

  adj_16 abv, $0100
  lda abv
  cmp #$35
  fail_ne 24
  lda abv+1
  cmp #$13
  fail_ne 25

  adj_16 abv, $0101
  lda abv
  cmp #$36
  fail_ne 26
  lda abv+1
  cmp #$14
  fail_ne 27

  adj_16 abv, exit
  lda abv
  cmp #$2F
  fail_ne 26
  lda abv+1
  cmp #$14
  fail_ne 27


  ; Adjust a zero page indirect variable.
  set_16 ptr,abv
  set_16 (ptr),$1234

  adj_16 (ptr),$0000
  lda abv
  cmp #$34
  fail_ne 30
  lda abv+1
  cmp #$12
  fail_ne 31

  adj_16 (ptr),$0001
  lda abv
  cmp #$35
  fail_ne 32
  lda abv+1
  cmp #$12
  fail_ne 33

  adj_16 (ptr),$0100
  lda abv
  cmp #$35
  fail_ne 34
  lda abv+1
  cmp #$13
  fail_ne 35

  adj_16 (ptr),$0101
  lda abv
  cmp #$36
  fail_ne 36
  lda abv+1
  cmp #$14
  fail_ne 37

  adj_16 (ptr),exit
  lda abv
  cmp #$2F
  fail_ne 36
  lda abv+1
  cmp #$14
  fail_ne 37


  ; Use macro to adjust a zero page indirect indexed by Y variable.
  ldy #10
  set_16 {(ptr),y},$1234

  adj_16 {(ptr),y},$0000
  lda abv+10
  cmp #$34
  fail_ne 40
  lda abv+11
  cmp #$12
  fail_ne 41

  adj_16 {(ptr),y},$0001
  lda abv+10
  cmp #$35
  fail_ne 42
  lda abv+11
  cmp #$12
  fail_ne 43

  adj_16 {(ptr),y},$0100
  lda abv+10
  cmp #$35
  fail_ne 44
  lda abv+11
  cmp #$13
  fail_ne 45

  adj_16 {(ptr),y},$0101
  lda abv+10
  cmp #$36
  fail_ne 46
  lda abv+11
  cmp #$14
  fail_ne 47

  adj_16 {(ptr),y},exit
  lda abv+10
  cmp #$2F
  fail_ne 48
  lda abv+11
  cmp #$14
  fail_ne 49


  ; Use macro to adjust a zero page indexed by X variable.
  ldx #10
  set_16 {ptr,x},$1234

  adj_16 {ptr,x},$0000
  lda ptr+10
  cmp #$34
  fail_ne 50
  lda ptr+11
  cmp #$12
  fail_ne 51

  adj_16 {ptr,x},$0001
  lda ptr+10
  cmp #$35
  fail_ne 52
  lda ptr+11
  cmp #$12
  fail_ne 53

  adj_16 {ptr,x},$0100
  lda ptr+10
  cmp #$35
  fail_ne 54
  lda ptr+11
  cmp #$13
  fail_ne 55

  adj_16 {ptr,x},$0101
  lda ptr+10
  cmp #$36
  fail_ne 56
  lda ptr+11
  cmp #$14
  fail_ne 57

  adj_16 {ptr,x},exit
  lda ptr+10
  cmp #$2F
  fail_ne 58
  lda ptr+11
  cmp #$14
  fail_ne 59


  ; Use macro to adjust a zero page indexed by Y variable.
  ldy #10
  set_16 {ptr,y},$1234

  adj_16 {ptr,y},$0000
  lda ptr+10
  cmp #$34
  fail_ne 60
  lda ptr+11
  cmp #$12
  fail_ne 61

  adj_16 {ptr,y},$0001
  lda ptr+10
  cmp #$35
  fail_ne 62
  lda ptr+11
  cmp #$12
  fail_ne 63

  adj_16 {ptr,y},$0100
  lda ptr+10
  cmp #$35
  fail_ne 64
  lda ptr+11
  cmp #$13
  fail_ne 65

  adj_16 {ptr,y},$0101
  lda ptr+10
  cmp #$36
  fail_ne 66
  lda ptr+11
  cmp #$14
  fail_ne 67

  adj_16 {ptr,y},exit
  lda ptr+10
  cmp #$2F
  fail_ne 68
  lda ptr+11
  cmp #$14
  fail_ne 69


  ; That's all folks!
  tests_pass
