; Minimum code that passes a test

.include "test65.i65"
.include "../utilities/assist_16/set_16.i65"
.include "../utilities/assist_16/eql_16.i65"

.export _main
.pc02

.zeropage
zpv: .res 2
ptr: .res 2

.data
abv: .res 12

.code

_main:

  ; Test a zero page variable.
  set_16 zpv, $0000
  eql_16 zpv, $0000
  fail_ne 10
  eql_16 zpv, $0001
  fail_eq 11
  eql_16 zpv, $0100
  fail_eq 12
  eql_16 zpv, $1234
  fail_eq 13
  eql_16 zpv, exit
  fail_eq 14

  set_16 zpv, $0001
  eql_16 zpv, $0000
  fail_eq 20
  eql_16 zpv, $0001
  fail_ne 21
  eql_16 zpv, $0100
  fail_eq 22
  eql_16 zpv, $1234
  fail_eq 23
  eql_16 zpv, exit
  fail_eq 24

  set_16 zpv, $0100
  eql_16 zpv, $0000
  fail_eq 30
  eql_16 zpv, $0001
  fail_eq 31
  eql_16 zpv, $0100
  fail_ne 32
  eql_16 zpv, $1234
  fail_eq 33
  eql_16 zpv, exit
  fail_eq 34

  set_16 zpv, $1234
  eql_16 zpv, $0000
  fail_eq 40
  eql_16 zpv, $0001
  fail_eq 41
  eql_16 zpv, $0100
  fail_eq 42
  eql_16 zpv, $1234
  fail_ne 43
  eql_16 zpv, exit
  fail_eq 44

  set_16 zpv, $FFF9
  eql_16 zpv, $0000
  fail_eq 50
  eql_16 zpv, $0001
  fail_eq 51
  eql_16 zpv, $0100
  fail_eq 52
  eql_16 zpv, $1234
  fail_eq 53
  eql_16 zpv, exit
  fail_ne 54


  ; Test an absolute variable.
  set_16 abv, $0000
  eql_16 abv, $0000
  fail_ne 60
  eql_16 abv, $0001
  fail_eq 61
  eql_16 abv, $0100
  fail_eq 62
  eql_16 abv, $1234
  fail_eq 63
  eql_16 abv, exit
  fail_eq 64

  set_16 abv, $0001
  eql_16 abv, $0000
  fail_eq 70
  eql_16 abv, $0001
  fail_ne 71
  eql_16 abv, $0100
  fail_eq 72
  eql_16 abv, $1234
  fail_eq 73
  eql_16 abv, exit
  fail_eq 74

  set_16 abv, $0100
  eql_16 abv, $0000
  fail_eq 80
  eql_16 abv, $0001
  fail_eq 81
  eql_16 abv, $0100
  fail_ne 82
  eql_16 abv, $1234
  fail_eq 83
  eql_16 abv, exit
  fail_eq 84

  set_16 abv, $1234
  eql_16 abv, $0000
  fail_eq 90
  eql_16 abv, $0001
  fail_eq 91
  eql_16 abv, $0100
  fail_eq 92
  eql_16 abv, $1234
  fail_ne 93
  eql_16 abv, exit
  fail_eq 94

  set_16 abv, $FFF9
  eql_16 abv, $0000
  fail_eq 100
  eql_16 abv, $0001
  fail_eq 101
  eql_16 abv, $0100
  fail_eq 102
  eql_16 abv, $1234
  fail_eq 103
  eql_16 abv, exit
  fail_ne 104


  ; Test a zero page indirect variable.
  set_16 ptr,abv
  set_16 (ptr), $0000
  eql_16 (ptr), $0000
  fail_ne 110
  eql_16 (ptr), $0001
  fail_eq 111
  eql_16 (ptr), $0100
  fail_eq 112
  eql_16 (ptr), $1234
  fail_eq 113
  eql_16 (ptr), exit
  fail_eq 114

  set_16 (ptr), $0001
  eql_16 (ptr), $0000
  fail_eq 120
  eql_16 (ptr), $0001
  fail_ne 121
  eql_16 (ptr), $0100
  fail_eq 122
  eql_16 (ptr), $1234
  fail_eq 123
  eql_16 (ptr), exit
  fail_eq 124

  set_16 (ptr), $0100
  eql_16 (ptr), $0000
  fail_eq 130
  eql_16 (ptr), $0001
  fail_eq 131
  eql_16 (ptr), $0100
  fail_ne 132
  eql_16 (ptr), $1234
  fail_eq 133
  eql_16 (ptr), exit
  fail_eq 134

  set_16 (ptr), $1234
  eql_16 (ptr), $0000
  fail_eq 140
  eql_16 (ptr), $0001
  fail_eq 141
  eql_16 (ptr), $0100
  fail_eq 142
  eql_16 (ptr), $1234
  fail_ne 143
  eql_16 (ptr), exit
  fail_eq 144

  set_16 (ptr), $FFF9
  eql_16 (ptr), $0000
  fail_eq 150
  eql_16 (ptr), $0001
  fail_eq 151
  eql_16 (ptr), $0100
  fail_eq 152
  eql_16 (ptr), $1234
  fail_eq 153
  eql_16 (ptr), exit
  fail_ne 154


  ; Test a zero page indirect indexed with Y variable.
  ldy #10
  set_16 {(ptr),y}, $0000
  eql_16 {(ptr),y}, $0000
  fail_ne 160
  eql_16 {(ptr),y}, $0001
  fail_eq 161
  eql_16 {(ptr),y}, $0100
  fail_eq 162
  eql_16 {(ptr),y}, $1234
  fail_eq 163
  eql_16 {(ptr),y}, exit
  fail_eq 164

  set_16 {(ptr),y}, $0001
  eql_16 {(ptr),y}, $0000
  fail_eq 170
  eql_16 {(ptr),y}, $0001
  fail_ne 171
  eql_16 {(ptr),y}, $0100
  fail_eq 172
  eql_16 {(ptr),y}, $1234
  fail_eq 173
  eql_16 {(ptr),y}, exit
  fail_eq 174

  set_16 {(ptr),y}, $0100
  eql_16 {(ptr),y}, $0000
  fail_eq 180
  eql_16 {(ptr),y}, $0001
  fail_eq 181
  eql_16 {(ptr),y}, $0100
  fail_ne 182
  eql_16 {(ptr),y}, $1234
  fail_eq 183
  eql_16 {(ptr),y}, exit
  fail_eq 184

  set_16 {(ptr),y}, $1234
  eql_16 {(ptr),y}, $0000
  fail_eq 190
  eql_16 {(ptr),y}, $0001
  fail_eq 191
  eql_16 {(ptr),y}, $0100
  fail_eq 192
  eql_16 {(ptr),y}, $1234
  fail_ne 193
  eql_16 {(ptr),y}, exit
  fail_eq 194

  set_16 {(ptr),y}, $FFF9
  eql_16 {(ptr),y}, $0000
  fail_eq 200
  eql_16 {(ptr),y}, $0001
  fail_eq 201
  eql_16 {(ptr),y}, $0100
  fail_eq 202
  eql_16 {(ptr),y}, $1234
  fail_eq 203
  eql_16 {(ptr),y}, exit
  fail_ne 204


  tests_pass
